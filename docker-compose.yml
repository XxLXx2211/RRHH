version: '3.8'

services:
  # Aplicación Next.js
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nextn-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres123@postgres:5432/candidatoscope
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs

  postgres:
    image: postgres:16-alpine
    container_name: candidatoscope-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: candidatoscope
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Opcional: pgAdmin para administración visual
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: candidatoscope-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@candidatoscope.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_data:
  pgadmin_data:
